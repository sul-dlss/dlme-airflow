version: 2.1

orbs:
  python: circleci/python@2.1.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: suldlss/dlme-airflow
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  build:
    executor:
      name: python/default
      tag: "3.12"
    steps:
      - run:
          command: |
            poetry --version
          name: Show poetry version
      - checkout
      - run:
          command: |
            poetry lock
      - python/install-packages:
          no_output_timeout: 20m
          pkg-manager: poetry

  linting:
     executor: 
       name: python/default
       tag: "3.12"
     steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Lint the code with flake8
          command: |
             poetry run flake8
      - run:
          name: Lint the code with Black
          command: |
             poetry run black --diff --check .
      - run:
          name: Lint the Intake catalog configs with yamllint
          command: |
             poetry run yamllint catalogs/

  typechecking:
    executor:
      name: python/default
      tag: "3.12"
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Type check with mypy
          command: |
             poetry run mypy dlme_airflow

  test:
     executor: 
       name: python/default
       tag: "3.12"
     steps:
       - checkout
       - python/install-packages:
           pkg-manager: poetry
       - run:
           name: Setup Code Climate test-reporter
           command: |
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
              ./cc-test-reporter before-build
       - run:
           name: Run tests
           command: |
              PYTHONPATH=dlme_airflow poetry run pytest
       - run:
           name: Report test coverage results to CodeClimate
           command: |
              ./cc-test-reporter after-build --coverage-input-type 'coverage.py' --exit-code $?

  publish_to_dockerhub:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
             docker build . -t $IMAGE_NAME:latest

      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push $IMAGE_NAME:latest

workflows:
  version: 2

  build:
    jobs:
      - build
      - linting:
          requires:
            - build
      - typechecking:
          requires:
            - build
      - test:
          requires:
            - build
      - publish_to_dockerhub:
          filters:
            branches:
              only: main
